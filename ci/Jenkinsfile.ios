pipeline {
  agent { label 'fastlane' }

  options {
    timestamps()
    /* Prevent Jenkins jobs from running forever */
    timeout(time: 45, unit: 'MINUTES')
    /* Limit builds retained */
    buildDiscarder(logRotator(
      numToKeepStr: '60',
      daysToKeepStr: '30',
      artifactNumToKeepStr: '60',
    ))
  }

  environment {
    BUILD_PLATFORM = 'ios'
    LANG = 'en_US.UTF-8'
    LANGUAGE = 'en_US.UTF-8'
    LC_ALL = 'en_US.UTF-8'
    FASTLANE_DISABLE_COLORS=1
    REALM_DISABLE_ANALYTICS=1
    BUNDLE_PATH = "${HOME}/.bundle"
  }

  stages {
    stage('Prep') {
      steps {
        script {
          print "Running ${params.BUILD_TYPE} build!"
          /* Necessary to load methods */
          mobile = load 'ci/mobile.groovy'
          cmn    = load 'ci/common.groovy'
          /* Cleanup and Prep */
          mobile.prep(cmn.getBuildType())
          /* Run at start to void mismatched numbers */
          cmn.buildNumber()
        }
      }
    }
    stage('Lint') {
      steps {
        script { cmn.runLint() }
      }
    }
    stage('Tests') {
      steps {
        script { cmn.runTests() }
      }
    }
    stage('Build') {
      steps {
        script { mobile.leinBuild('ios') }
      }
    }
    stage('Compile') {
      steps {
        script { api = mobile.ios.compile(cmn.getBuildType()) }
      }
    }
    stage('Archive') {
      steps {
        script { archiveArtifacts api }
      }
    }
    stage('Upload') {
      steps {
        script { env.DIAWI_URL = mobile.ios.uploadToDiawi() }
      }
    }
  }
}
